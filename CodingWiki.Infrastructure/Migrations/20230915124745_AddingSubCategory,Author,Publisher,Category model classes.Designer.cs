// <auto-generated />
using CodingWiki.Infrastructure.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodingWiki.Infrastructure.Migrations
{
    [DbContext(typeof(CodingWikiDBContext))]
    [Migration("20230915124745_AddingSubCategory,Author,Publisher,Category model classes")]
    partial class AddingSubCategoryAuthorPublisherCategorymodelclasses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CodingWiki.Infrastructure.EF.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal(10,5)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            ISBN = "123B120",
                            Price = 10.99m,
                            Title = "Suits"
                        },
                        new
                        {
                            BookId = 2,
                            ISBN = "12123B120",
                            Price = 11.99m,
                            Title = "Never Have I Ever"
                        },
                        new
                        {
                            BookId = 3,
                            ISBN = "10123B120",
                            Price = 17.99m,
                            Title = "Vampire Diaries"
                        },
                        new
                        {
                            BookId = 4,
                            ISBN = "10188B170",
                            Price = 87.99m,
                            Title = "Red Hoodie"
                        },
                        new
                        {
                            BookId = 5,
                            ISBN = "10180AB170",
                            Price = 47.99m,
                            Title = "Hilda"
                        });
                });

            modelBuilder.Entity("CodingWiki.Infrastructure.EF.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
